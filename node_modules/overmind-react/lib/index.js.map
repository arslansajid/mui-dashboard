{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,4BAAyB;AAEzB,uCAMiB;AAEjB,+BAA8B;AAE9B,MAAM,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAA;AAC3D,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,CAAA;AAC/C,MAAM,MAAM,GACV,CAAC,OAAO,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;AAyBxE,SAAS,wBAAwB;IAC/B,MAAM,IAAI,KAAK,CACb,0PAA0P,CAC3P,CAAA;AACH,CAAC;AAED,MAAM,OAAO,GAAG,KAAK,CAAC,aAAa,CAA2B,EAE7D,CAAC,CAAA;AACF,IAAI,eAAe,GAAG,CAAC,CAAA;AAEV,QAAA,QAAQ,GAEjB,OAAO,CAAC,QAAQ,CAAA;AAEP,QAAA,UAAU,GAAG,GAMvB,EAAE;IACH,IAAI,0BAA0B,GAAG,CAAC,CAAA;IAClC,MAAM,EACJ,iBAAiB,GAClB,GAAI,KAAa,CAAC,kDAAkD,CAAA;IACrE,MAAM,mBAAmB,GAAG,GAAG,EAAE;QAC/B,OAAO,iBAAiB;YACtB,iBAAiB,CAAC,OAAO;YACzB,iBAAiB,CAAC,OAAO,CAAC,WAAW;YACrC,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,WAAW;YACvC,CAAC,CAAC,EAAE,CAAA;IACR,CAAC,CAAA;IACD,MAAM,gBAAgB,GAAG,GAAG,EAAE;QAC5B,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;QACpD,4DAA4D;QAC5D,MAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,EAAE,EAAE,CAAC,CAAA;QAE9D,KAAK,CAAC,SAAS,CACb,GAAG,EAAE,CAAC,GAAG,EAAE;YACT,UAAU,CAAC,OAAO,GAAG,KAAK,CAAA;QAC5B,CAAC,EACD,EAAE,CACH,CAAA;QAED,MAAM,aAAa,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,EAAQ,EAAE;YAC7C,IAAI,UAAU,CAAC,OAAO,EAAE;gBACtB,QAAQ,CAAC,OAAO,CAAC,CAAA;aAClB;QACH,CAAC,CAAA;QACD,OAAO;YACL,aAAa;YACb,OAAO;SACR,CAAA;IACH,CAAC,CAAA;IAED,OAAO,GAAG,EAAE;QACV,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,CAAqB,CAAA;QAE9D,IAAI,CAAE,QAAgB,CAAC,IAAI,EAAE;YAC3B,wBAAwB,EAAE,CAAA;SAC3B;QAED,IAAI,MAAM,IAAK,QAAgB,CAAC,IAAI,CAAC,IAAI,KAAK,mBAAQ,EAAE;YACtD,OAAO;gBACL,KAAK,EAAE,QAAQ,CAAC,KAAK;gBACrB,OAAO,EAAE,QAAQ,CAAC,OAAO;gBACzB,OAAO,EAAE,QAAQ,CAAC,OAAO;gBACzB,mBAAmB,EAAE,QAAQ,CAAC,mBAAmB;gBACjD,QAAQ,EAAE,QAAQ,CAAC,QAAQ;aAC5B,CAAA;SACF;QAED,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAM,GAAG,EAAE,CAClC,QAAgB,CAAC,cAAc,CAAC,iBAAiB,EAAE,EAAE,EAAE,CACzD,CAAA;QAED,IAAI,aAAa,EAAE;YACjB,MAAM,EAAE,aAAa,EAAE,GAAG,gBAAgB,EAAE,CAAA;YAE5C,KAAK,CAAC,SAAS,CACb,GAAG,EAAE,CAAC,GAAG,EAAE;gBACT,CAAC;gBAAC,QAAgB,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;YACrD,CAAC,EACD,EAAE,CACH,CAAA;YAED,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAA;YAEhD,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;SAC1B;aAAM;YACL,MAAM,SAAS,GAAG,mBAAmB,EAAE,CAAA;YACvC,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAA;YAC3B,SAAS,CAAC,aAAa;gBACrB,OAAO,SAAS,CAAC,aAAa,KAAK,WAAW;oBAC5C,CAAC,CAAC,eAAe,EAAE;oBACnB,CAAC,CAAC,SAAS,CAAC,aAAa,CAAA;YAE7B,MAAM,EAAE,OAAO,EAAE,mBAAmB,EAAE,GAAG,KAAK,CAAC,MAAM,CACnD,0BAA0B,EAAE,CAC7B,CAAA;YAED,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,GAAG,gBAAgB,EAAE,CAAA;YAErD,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE;gBACzB,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAS,CAAC,aAAa,EAAE;oBACnD,WAAW,EAAE,SAAS,CAAC,aAAa;oBACpC,mBAAmB;oBACnB,IAAI;oBACJ,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAQ;iBAChD,CAAC,CAAA;gBAEF,OAAO,GAAG,EAAE;oBACV,CAAC;oBAAC,QAAgB,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;oBACnD,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAS,CAAC,gBAAgB,EAAE;wBACtD,WAAW,EAAE,SAAS,CAAC,aAAa;wBACpC,mBAAmB;wBACnB,IAAI;qBACL,CAAC,CAAA;gBACJ,CAAC,CAAA;YACH,CAAC,EAAE,EAAE,CAAC,CAAA;YAEN,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE;gBACzB,IAAI,CAAC,YAAY,EAAE,CAAA;gBACnB,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAS,CAAC,gBAAgB,EAAE;oBACtD,WAAW,EAAE,SAAS,CAAC,aAAa;oBACpC,mBAAmB;oBACnB,IAAI;oBACJ,OAAO;oBACP,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAQ;iBAChD,CAAC,CAAA;YACJ,CAAC,CAAC,CAAA;YACF,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;SAC1B;QAED,MAAM,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE;YACrB,MAAM,KAAK,GAAG,EAAE,EAAE,CAAA;YAElB,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;gBACzC,CAAC;gBAAC,QAAgB,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;gBAEnD,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;oBAC5B,MAAM,OAAO,GAAG,QAAQ,CAAC,gBAAgB,CAAC,GAAG,EAAE;wBAC7C,MAAM,QAAQ,GAAG,EAAE,EAAE,CAAA;wBAErB,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;4BAC/C,OAAM;yBACP;wBAED,OAAO,EAAE,CAAA;wBACT,OAAO,EAAE,CAAA;oBACX,CAAC,CAAC,CAAA;gBACJ,CAAC,CAAC,CAAA;aACH;YAED,OAAO,KAAK,CAAA;QACd,CAAC,CAAA;QAED,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,mBAAmB,EAAE,QAAQ,CAAC,mBAAmB;YACjD,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,OAAO;SACR,CAAA;IACH,CAAC,CAAA;AACH,CAAC,CAAA;AAEY,QAAA,aAAa,GAAG,GAAsC,EAAE;IACnE,OAAO,CACL,SAQC,EAMD,EAAE;QACF,IAAI,mBAAmB,GAAG,CAAC,CAAA;QAC3B,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAA;QAC3B,MAAM,kBAAkB,GAAG,SAAgB,CAAA;QAC3C,kBAAkB,CAAC,aAAa;YAC9B,OAAO,kBAAkB,CAAC,aAAa,KAAK,WAAW;gBACrD,CAAC,CAAC,eAAe,EAAE;gBACnB,CAAC,CAAC,kBAAkB,CAAC,aAAa,CAAA;QACtC,MAAM,gBAAgB,GACpB,SAAS,CAAC,SAAS,IAAI,OAAO,SAAS,CAAC,SAAS,CAAC,MAAM,KAAK,UAAU,CAAA;QAEzE,IAAI,gBAAgB,EAAE;YACpB,MAAM,cAAc,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,CAAA;YACjD,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG;gBAC3B,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACvB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CACxC,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAC/B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAC7B,CAAA;iBACF;gBAED,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YAClC,CAAC,CAAA;SACF;QAED,IAAI,aAAa,EAAE;YACjB,MAAM,GAAI,SAAQ,KAAK,CAAC,SAAS;gBAQ/B,YAAY,KAAK,EAAE,OAAO;oBACxB,KAAK,CAAC,KAAK,CAAC,CAAA;oBA2Bd,aAAQ,GAAG,GAAG,EAAE;wBACd,IAAI,CAAC,QAAQ,CAAC;4BACZ,QAAQ,EAAE;gCACR,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;gCACtB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;gCAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;gCAC9B,mBAAmB,EAAE,IAAI,CAAC,QAAQ,CAAC,mBAAmB;gCACtD,QAAQ,EAAE,IAAI,CAAC,QAAQ;gCACvB,IAAI,EAAE,IAAI,CAAC,IAAI;gCACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;6BACjC;yBACF,CAAC,CAAA;oBACJ,CAAC,CAAA;oBArCC,IAAI,CAAC,OAAO,EAAE;wBACZ,wBAAwB,EAAE,CAAA;qBAC3B;oBACD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;oBACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAA;oBAC5D,IAAI,CAAC,KAAK,GAAG;wBACX,QAAQ,EAAE;4BACR,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;4BACtB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;4BAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;4BAC9B,mBAAmB,EAAE,IAAI,CAAC,QAAQ,CAAC,mBAAmB;4BACtD,QAAQ,EAAE,IAAI,CAAC,QAAQ;4BACvB,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;yBACjC;qBACF,CAAA;oBACD,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,IAAI,EAAE,EAAE,CAClC,IAAI,CAAC,IAAI,CAAC,UAAU,CAClB,GAAG,EAAE,CAAE,SAAiB,CAAC,GAAG,IAAI,CAAC,EACjC,IAAI,CAAC,QAAQ,CACd,CAAA;gBACL,CAAC;gBACD,oBAAoB;oBAClB,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;gBACrD,CAAC;gBAcD,MAAM;oBACJ,IAAI,gBAAgB,EAAE;wBACpB,OAAO,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,gCACjC,IAAI,CAAC,KAAK,KACb,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GACvB,CAAC,CAAA;qBACV;oBAED,OAAO,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,EAAE,gCAC7C,IAAI,CAAC,KAAK,KACb,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GACvB,CAAC,CAAA;gBACX,CAAC;;YAtDM,eAAW,GAAG,OAAO,CAAA;YAyD9B,OAAO,GAAU,CAAA;SAClB;aAAM;YACL,MAAM,GAAI,SAAQ,KAAK,CAAC,SAAS;gBAW/B,YAAY,KAAK,EAAE,OAAO;oBACxB,KAAK,CAAC,KAAK,CAAC,CAAA;oBATd,wBAAmB,GAAG,mBAAmB,EAAE,CAAA;oBAC3C,mBAAc,GAAG,CAAC,CAAA;oBA6DlB,aAAQ,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE;wBACtC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAA;wBAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA;wBACtB,IAAI,CAAC,QAAQ,CAAC;4BACZ,QAAQ,EAAE;gCACR,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;gCACtB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;gCAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;gCAC9B,mBAAmB,EAAE,IAAI,CAAC,QAAQ,CAAC,mBAAmB;gCACtD,QAAQ,EAAE,IAAI,CAAC,QAAQ;gCACvB,IAAI,EAAE,IAAI,CAAC,IAAI;gCACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;6BACjC;yBACF,CAAC,CAAA;oBACJ,CAAC,CAAA;oBAjEC,IAAI,CAAC,OAAO,EAAE;wBACZ,wBAAwB,EAAE,CAAA;qBAC3B;oBAED,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;oBACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAA;oBAC5D,IAAI,CAAC,KAAK,GAAG;wBACX,QAAQ,EAAE;4BACR,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;4BACtB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;4BAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;4BAC9B,mBAAmB,EAAE,IAAI,CAAC,QAAQ,CAAC,mBAAmB;4BACtD,QAAQ,EAAE,IAAI,CAAC,QAAQ;4BACvB,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;yBACjC;qBACF,CAAA;oBACD,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,IAAI,EAAE,EAAE,CAClC,IAAI,CAAC,IAAI,CAAC,UAAU,CAClB,GAAG,EAAE,CAAE,SAAiB,CAAC,GAAG,IAAI,CAAC,EACjC,IAAI,CAAC,QAAQ,CACd,CAAA;gBACL,CAAC;gBACD,iBAAiB;oBACf,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAS,CAAC,aAAa,EAAE;wBACxD,WAAW,EAAE,kBAAkB,CAAC,aAAa;wBAC7C,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;wBAC7C,IAAI;wBACJ,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAQ;qBACrD,CAAC,CAAA;gBACJ,CAAC;gBACD,kBAAkB;oBAChB,IAAI,IAAI,CAAC,UAAU,EAAE;wBACnB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAS,CAAC,gBAAgB,EAAE;4BAC3D,WAAW,EAAE,kBAAkB,CAAC,aAAa;4BAC7C,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;4BAC7C,IAAI;4BACJ,OAAO,EAAE,IAAI,CAAC,cAAc;4BAC5B,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAA+B,CAAC;yBAC7D,CAAC,CAAA;wBACF,IAAI,CAAC,UAAU,GAAG,KAAK,CAAA;qBACxB;gBACH,CAAC;gBACD,oBAAoB;oBAClB,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;oBACnD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAS,CAAC,gBAAgB,EAAE;wBAC3D,WAAW,EAAE,kBAAkB,CAAC,aAAa;wBAC7C,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;wBAC7C,IAAI;qBACL,CAAC,CAAA;gBACJ,CAAC;gBAgBD,MAAM;oBACJ,IAAI,gBAAgB,EAAE;wBACpB,OAAO,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,gCACjC,IAAI,CAAC,KAAK,KACb,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GACvB,CAAC,CAAA;qBACV;oBACD,OAAO,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,EAAE,gCAC7C,IAAI,CAAC,KAAK,KACb,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GACvB,CAAC,CAAA;gBACX,CAAC;;YAjFM,eAAW,GAAG,OAAO,CAAA;YAoF9B,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE;gBAC3B,IAAI,EAAE;oBACJ,KAAK,EAAE,SAAS,GAAG,CAAC,SAAS,CAAC,WAAW,IAAI,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;iBACnE;aACF,CAAC,CAAA;YAEF,OAAO,GAAU,CAAA;SAClB;IACH,CAAC,CAAA;AACH,CAAC,CAAA","sourcesContent":["import 'proxy-state-tree'\n\nimport {\n  EventType,\n  IConfiguration,\n  MODE_SSR,\n  Overmind,\n  OvermindMock,\n} from 'overmind'\nimport { IMutationCallback } from 'proxy-state-tree'\nimport * as react from 'react'\n\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\nconst IS_TEST = process.env.NODE_ENV === 'test'\nconst isNode =\n  !IS_TEST && process && process.title && process.title.includes('node')\n\nexport type IReactComponent<P = any> =\n  | react.StatelessComponent<P>\n  | react.ComponentClass<P>\n  | react.ClassicComponentClass<P>\n\n// Diff / Omit taken from https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-311923766\ntype Omit<T, K extends keyof T> = Pick<\n  T,\n  ({ [P in keyof T]: P } &\n    { [P in K]: never } & { [x: string]: never; [x: number]: never })[keyof T]\n>\n\nexport interface IConnect<Config extends IConfiguration> {\n  overmind: {\n    state: Overmind<Config>['state']\n    actions: Overmind<Config>['actions']\n    effects: Overmind<Config>['effects']\n    addMutationListener: Overmind<Config>['addMutationListener']\n    reaction: Overmind<Config>['reaction']\n    suspend: <T>(cb: () => T) => T\n  }\n}\n\nfunction throwMissingContextError() {\n  throw new Error(\n    'The Overmind hook could not find an Overmind instance on the context of React. Please make sure you use the Provider component at the top of your application and expose the Overmind instance there. Please read more in the React guide on the website'\n  )\n}\n\nconst context = react.createContext<Overmind<IConfiguration>>({} as Overmind<\n  IConfiguration\n>)\nlet nextComponentId = 0\n\nexport const Provider: React.ProviderExoticComponent<\n  React.ProviderProps<Overmind<IConfiguration> | OvermindMock<IConfiguration>>\n> = context.Provider\n\nexport const createHook = <Config extends IConfiguration>(): (() => {\n  state: Overmind<Config>['state']\n  actions: Overmind<Config>['actions']\n  effects: Overmind<Config>['effects']\n  addMutationListener: (cb: IMutationCallback) => () => void\n  reaction: Overmind<Config>['reaction']\n}) => {\n  let currentComponentInstanceId = 0\n  const {\n    ReactCurrentOwner,\n  } = (react as any).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n  const useCurrentComponent = () => {\n    return ReactCurrentOwner &&\n      ReactCurrentOwner.current &&\n      ReactCurrentOwner.current.elementType\n      ? ReactCurrentOwner.current.elementType\n      : {}\n  }\n  const useForceRerender = () => {\n    const [flushId, setState] = react.useState(() => -1)\n    // We use memo here, instead of ref, to support fast-refresh\n    const mountedRef = react.useMemo(() => ({ current: true}), [])\n\n    react.useEffect(\n      () => () => {\n        mountedRef.current = false\n      },\n      []\n    )\n\n    const forceRerender = (_, __, flushId): void => {\n      if (mountedRef.current) {\n        setState(flushId)\n      }\n    }\n    return {\n      forceRerender,\n      flushId,\n    }\n  }\n\n  return () => {\n    const overmind = react.useContext(context) as Overmind<Config>\n\n    if (!(overmind as any).mode) {\n      throwMissingContextError()\n    }\n\n    if (isNode || (overmind as any).mode.mode === MODE_SSR) {\n      return {\n        state: overmind.state,\n        actions: overmind.actions,\n        effects: overmind.effects,\n        addMutationListener: overmind.addMutationListener,\n        reaction: overmind.reaction,\n      }\n    }\n\n    const tree = react.useMemo<any>(() =>\n      (overmind as any).proxyStateTree.getTrackStateTree(), []\n    )\n\n    if (IS_PRODUCTION) {\n      const { forceRerender } = useForceRerender()\n\n      react.useEffect(\n        () => () => {\n          ;(overmind as any).proxyStateTree.disposeTree(tree)\n        },\n        []\n      )\n\n      react.useLayoutEffect(() => tree.stopTracking())\n\n      tree.track(forceRerender)\n    } else {\n      const component = useCurrentComponent()\n      const name = component.name\n      component.__componentId =\n        typeof component.__componentId === 'undefined'\n          ? nextComponentId++\n          : component.__componentId\n\n      const { current: componentInstanceId } = react.useRef<any>(\n        currentComponentInstanceId++\n      )\n\n      const { flushId, forceRerender } = useForceRerender()\n\n      react.useLayoutEffect(() => {\n        overmind.eventHub.emitAsync(EventType.COMPONENT_ADD, {\n          componentId: component.__componentId,\n          componentInstanceId,\n          name,\n          paths: Array.from(tree.pathDependencies) as any,\n        })\n\n        return () => {\n          ;(overmind as any).proxyStateTree.disposeTree(tree)\n          overmind.eventHub.emitAsync(EventType.COMPONENT_REMOVE, {\n            componentId: component.__componentId,\n            componentInstanceId,\n            name,\n          })\n        }\n      }, [])\n\n      react.useLayoutEffect(() => {\n        tree.stopTracking()\n        overmind.eventHub.emitAsync(EventType.COMPONENT_UPDATE, {\n          componentId: component.__componentId,\n          componentInstanceId,\n          name,\n          flushId,\n          paths: Array.from(tree.pathDependencies) as any,\n        })\n      })\n      tree.track(forceRerender)\n    }\n\n    const suspend = (cb) => {\n      const value = cb()\n\n      if (value === null || value === undefined) {\n        ;(overmind as any).proxyStateTree.disposeTree(tree)\n\n        throw new Promise((resolve) => {\n          const dispose = overmind.addFlushListener(() => {\n            const newValue = cb()\n\n            if (newValue === null || newValue === undefined) {\n              return\n            }\n\n            dispose()\n            resolve()\n          })\n        })\n      }\n\n      return value\n    }\n\n    return {\n      state: tree.state,\n      actions: overmind.actions,\n      effects: overmind.effects,\n      addMutationListener: overmind.addMutationListener,\n      reaction: overmind.reaction,\n      suspend,\n    }\n  }\n}\n\nexport const createConnect = <ThisConfig extends IConfiguration>() => {\n  return <Props>(\n    component: IReactComponent<\n      Props & {\n        overmind: {\n          state: Overmind<ThisConfig>['state']\n          actions: Overmind<ThisConfig>['actions']\n          reaction: Overmind<ThisConfig>['reaction']\n        }\n      }\n    >\n  ): IReactComponent<\n    Omit<\n      Props & IConnect<Overmind<ThisConfig>>,\n      keyof IConnect<Overmind<ThisConfig>>\n    >\n  > => {\n    let componentInstanceId = 0\n    const name = component.name\n    const populatedComponent = component as any\n    populatedComponent.__componentId =\n      typeof populatedComponent.__componentId === 'undefined'\n        ? nextComponentId++\n        : populatedComponent.__componentId\n    const isClassComponent =\n      component.prototype && typeof component.prototype.render === 'function'\n\n    if (isClassComponent) {\n      const originalRender = component.prototype.render\n      component.prototype.render = function() {\n        if (this.props.overmind) {\n          return this.props.overmind.tree.trackScope(\n            () => originalRender.call(this),\n            this.props.overmind.onUpdate\n          )\n        }\n\n        return originalRender.call(this)\n      }\n    }\n\n    if (IS_PRODUCTION) {\n      class HOC extends react.Component {\n        tree: any\n        overmind: any\n        state: {\n          overmind: any\n        }\n        wrappedComponent: any\n        static contextType = context\n        constructor(props, context) {\n          super(props)\n\n          if (!context) {\n            throwMissingContextError()\n          }\n          this.overmind = context\n          this.tree = this.overmind.proxyStateTree.getTrackStateTree()\n          this.state = {\n            overmind: {\n              state: this.tree.state,\n              effects: this.overmind.effects,\n              actions: this.overmind.actions,\n              addMutationListener: this.overmind.addMutationListener,\n              onUpdate: this.onUpdate,\n              tree: this.tree,\n              reaction: this.overmind.reaction,\n            },\n          }\n          this.wrappedComponent = (...args) =>\n            this.tree.trackScope(\n              () => (component as any)(...args),\n              this.onUpdate\n            )\n        }\n        componentWillUnmount() {\n          this.overmind.proxyStateTree.disposeTree(this.tree)\n        }\n        onUpdate = () => {\n          this.setState({\n            overmind: {\n              state: this.tree.state,\n              effects: this.overmind.effects,\n              actions: this.overmind.actions,\n              addMutationListener: this.overmind.addMutationListener,\n              onUpdate: this.onUpdate,\n              tree: this.tree,\n              reaction: this.overmind.reaction,\n            },\n          })\n        }\n        render() {\n          if (isClassComponent) {\n            return react.createElement(component, {\n              ...this.props,\n              overmind: this.state.overmind,\n            } as any)\n          }\n\n          return react.createElement(this.wrappedComponent, {\n            ...this.props,\n            overmind: this.state.overmind,\n          } as any)\n        }\n      }\n\n      return HOC as any\n    } else {\n      class HOC extends react.Component {\n        tree: any\n        overmind: any\n        componentInstanceId = componentInstanceId++\n        currentFlushId = 0\n        state: {\n          overmind: any\n        }\n        isUpdating: boolean\n        wrappedComponent: any\n        static contextType = context\n        constructor(props, context) {\n          super(props)\n\n          if (!context) {\n            throwMissingContextError()\n          }\n\n          this.overmind = context\n          this.tree = this.overmind.proxyStateTree.getTrackStateTree()\n          this.state = {\n            overmind: {\n              state: this.tree.state,\n              effects: this.overmind.effects,\n              actions: this.overmind.actions,\n              addMutationListener: this.overmind.addMutationListener,\n              onUpdate: this.onUpdate,\n              tree: this.tree,\n              reaction: this.overmind.reaction,\n            },\n          }\n          this.wrappedComponent = (...args) =>\n            this.tree.trackScope(\n              () => (component as any)(...args),\n              this.onUpdate\n            )\n        }\n        componentDidMount() {\n          this.overmind.eventHub.emitAsync(EventType.COMPONENT_ADD, {\n            componentId: populatedComponent.__componentId,\n            componentInstanceId: this.componentInstanceId,\n            name,\n            paths: Array.from(this.tree.pathDependencies) as any,\n          })\n        }\n        componentDidUpdate() {\n          if (this.isUpdating) {\n            this.overmind.eventHub.emitAsync(EventType.COMPONENT_UPDATE, {\n              componentId: populatedComponent.__componentId,\n              componentInstanceId: this.componentInstanceId,\n              name,\n              flushId: this.currentFlushId,\n              paths: Array.from(this.tree.pathDependencies as Set<string>),\n            })\n            this.isUpdating = false\n          }\n        }\n        componentWillUnmount() {\n          this.overmind.proxyStateTree.disposeTree(this.tree)\n          this.overmind.eventHub.emitAsync(EventType.COMPONENT_REMOVE, {\n            componentId: populatedComponent.__componentId,\n            componentInstanceId: this.componentInstanceId,\n            name,\n          })\n        }\n        onUpdate = (mutatons, paths, flushId) => {\n          this.currentFlushId = flushId\n          this.isUpdating = true\n          this.setState({\n            overmind: {\n              state: this.tree.state,\n              effects: this.overmind.effects,\n              actions: this.overmind.actions,\n              addMutationListener: this.overmind.addMutationListener,\n              onUpdate: this.onUpdate,\n              tree: this.tree,\n              reaction: this.overmind.reaction,\n            },\n          })\n        }\n        render() {\n          if (isClassComponent) {\n            return react.createElement(component, {\n              ...this.props,\n              overmind: this.state.overmind,\n            } as any)\n          }\n          return react.createElement(this.wrappedComponent, {\n            ...this.props,\n            overmind: this.state.overmind,\n          } as any)\n        }\n      }\n\n      Object.defineProperties(HOC, {\n        name: {\n          value: 'Connect' + (component.displayName || component.name || ''),\n        },\n      })\n\n      return HOC as any\n    }\n  }\n}\n"]}