{"ast":null,"code":"var _jsxFileName = \"/Users/arslansajid/Documents/Github/corona/covid19-client/src/sections/Historical/Content/Component.js\";\nimport React, { useMemo } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport dayjs from 'dayjs';\nimport Loading from 'components/Loading';\nimport Map from 'sections/Historical/Map';\nimport Chart from 'sections/Historical/Chart';\nimport { useHistorical } from 'api';\nimport { historical } from 'config';\nimport useStyles from './styles';\nconst dateFormat = historical.dates.format;\n\nconst getFormattedDate = (date, format = dateFormat) => {\n  return dayjs(date).format(format);\n};\n\nexport default function Content({\n  mode,\n  from,\n  to,\n  criterion,\n  selectedCountries,\n  currentDate\n}) {\n  const classes = useStyles();\n  const [data, isLoading] = useHistorical(getFormattedDate(from), getFormattedDate(to));\n  const prevDayDate = useMemo(_ => {\n    return getFormattedDate(dayjs(currentDate, historical.dates.format).subtract(1, 'days'));\n  }, [currentDate]);\n  const currentDataForMap = useMemo(_ => {\n    if (data && mode === 'map') {\n      return data[currentDate] || data[prevDayDate];\n    }\n  }, [data, mode, currentDate, prevDayDate]);\n  return /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"full-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, mode === 'map' ? currentDataForMap ? /*#__PURE__*/React.createElement(Map, {\n    data: currentDataForMap,\n    criterion: criterion,\n    by: \"countryRegion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, \"No Data\") : /*#__PURE__*/React.createElement(Chart, {\n    data: data,\n    selected: selectedCountries,\n    criterion: criterion,\n    currentDate: currentDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/arslansajid/Documents/Github/corona/covid19-client/src/sections/Historical/Content/Component.js"],"names":["React","useMemo","Box","Container","dayjs","Loading","Map","Chart","useHistorical","historical","useStyles","dateFormat","dates","format","getFormattedDate","date","Content","mode","from","to","criterion","selectedCountries","currentDate","classes","data","isLoading","prevDayDate","_","subtract","currentDataForMap","root"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,SAASC,aAAT,QAA8B,KAA9B;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,MAAMC,UAAU,GAAGF,UAAU,CAACG,KAAX,CAAiBC,MAApC;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,IAAD,EAAOF,MAAM,GAAGF,UAAhB,KAA+B;AACtD,SAAOP,KAAK,CAACW,IAAD,CAAL,CAAYF,MAAZ,CAAmBA,MAAnB,CAAP;AACD,CAFD;;AAIA,eAAe,SAASG,OAAT,CAAiB;AAC9BC,EAAAA,IAD8B;AAE9BC,EAAAA,IAF8B;AAG9BC,EAAAA,EAH8B;AAI9BC,EAAAA,SAJ8B;AAK9BC,EAAAA,iBAL8B;AAM9BC,EAAAA;AAN8B,CAAjB,EAOZ;AACD,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAM,CAACc,IAAD,EAAOC,SAAP,IAAoBjB,aAAa,CAACM,gBAAgB,CAACI,IAAD,CAAjB,EAAyBJ,gBAAgB,CAACK,EAAD,CAAzC,CAAvC;AAEA,QAAMO,WAAW,GAAGzB,OAAO,CAAC0B,CAAC,IAAI;AAC/B,WAAOb,gBAAgB,CAACV,KAAK,CAACkB,WAAD,EAAcb,UAAU,CAACG,KAAX,CAAiBC,MAA/B,CAAL,CAA4Ce,QAA5C,CAAqD,CAArD,EAAwD,MAAxD,CAAD,CAAvB;AACD,GAF0B,EAExB,CAACN,WAAD,CAFwB,CAA3B;AAIA,QAAMO,iBAAiB,GAAG5B,OAAO,CAAC0B,CAAC,IAAI;AACrC,QAAIH,IAAI,IAAIP,IAAI,KAAK,KAArB,EAA4B;AAC1B,aAAOO,IAAI,CAACF,WAAD,CAAJ,IAAqBE,IAAI,CAACE,WAAD,CAAhC;AACD;AACF,GAJgC,EAI9B,CAACF,IAAD,EAAOP,IAAP,EAAaK,WAAb,EAA0BI,WAA1B,CAJ8B,CAAjC;AAMA,sBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,SAAS,EAAEH,OAAO,CAACO,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIL,SAAS,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAEL;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEER,IAAI,KAAK,KAAT,GACIY,iBAAiB,gBACjB,oBAAC,GAAD;AACE,IAAA,IAAI,EAAEA,iBADR;AAEE,IAAA,SAAS,EAAET,SAFb;AAGE,IAAA,EAAE,EAAC,eAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,gBAMjB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPJ,gBAQI,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEI,IADR;AAEE,IAAA,QAAQ,EAAEH,iBAFZ;AAGE,IAAA,SAAS,EAAED,SAHb;AAIE,IAAA,WAAW,EAAEE,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVN,CAJR,CADF;AA0BD","sourcesContent":["import React, { useMemo } from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport dayjs from 'dayjs';\n\nimport Loading from 'components/Loading';\nimport Map from 'sections/Historical/Map';\nimport Chart from 'sections/Historical/Chart';\n\nimport { useHistorical } from 'api';\nimport { historical } from 'config';\n\nimport useStyles from './styles';\n\nconst dateFormat = historical.dates.format;\n\nconst getFormattedDate = (date, format = dateFormat) => {\n  return dayjs(date).format(format);\n}\n\nexport default function Content({\n  mode,\n  from,\n  to,\n  criterion,\n  selectedCountries,\n  currentDate,\n}) {\n  const classes = useStyles();\n  const [data, isLoading] = useHistorical(getFormattedDate(from), getFormattedDate(to));\n\n  const prevDayDate = useMemo(_ => {\n    return getFormattedDate(dayjs(currentDate, historical.dates.format).subtract(1, 'days'));\n  }, [currentDate]);\n\n  const currentDataForMap = useMemo(_ => {\n    if (data && mode === 'map') {\n      return data[currentDate] || data[prevDayDate];\n    }\n  }, [data, mode, currentDate, prevDayDate]);\n\n  return (\n    <Box display=\"flex\" className={classes.root}>\n      {\n        isLoading\n          ? <Loading />\n          : <div className=\"full-size\">\n            {\n              mode === 'map'\n                ? currentDataForMap\n                ? <Map\n                    data={currentDataForMap}\n                    criterion={criterion}\n                    by=\"countryRegion\"\n                  />\n                : <Container>No Data</Container>\n                : <Chart\n                    data={data}\n                    selected={selectedCountries}\n                    criterion={criterion}\n                    currentDate={currentDate}\n                 />\n            }\n          </div>\n      }\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}