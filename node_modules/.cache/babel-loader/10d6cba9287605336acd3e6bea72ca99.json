{"ast":null,"code":"var _jsxFileName = \"/Users/arslansajid/Documents/Github/corona/mui-dashboard/src/components/Maps/Settings/Component.js\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Paper from '@material-ui/core/Paper';\nimport { isMobile } from 'utils';\nimport { mapSettings } from 'config';\nimport useStyles from './styles';\nexport default function Settings({\n  value,\n  onChange,\n  onUSADivisionChange,\n  dividedInto\n}) {\n  const classes = useStyles({\n    dividedInto,\n    isMobile\n  });\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"map-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Highlighting (distribution) Criterion\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"map-settings\",\n    id: \"map-settings\",\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, [...mapSettings.main, ...(dividedInto ? [] : mapSettings.optional)].map((setting, i) => /*#__PURE__*/React.createElement(MenuItem, {\n    value: setting.value,\n    key: i,\n    disabled: setting.value === 'recovered' && dividedInto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 101\n    }\n  }, setting.name)))), dividedInto && /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"usa-map-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Divided into\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"usa-map-settings\",\n    id: \"usa-map-settings\",\n    value: dividedInto,\n    onChange: onUSADivisionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"states\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"States\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"counties\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"Counties\"))));\n}","map":{"version":3,"sources":["/Users/arslansajid/Documents/Github/corona/mui-dashboard/src/components/Maps/Settings/Component.js"],"names":["React","FormControl","MenuItem","InputLabel","Select","Paper","isMobile","mapSettings","useStyles","Settings","value","onChange","onUSADivisionChange","dividedInto","classes","root","formControl","main","optional","map","setting","i","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,QAA5B;AAEA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,mBAAnB;AAAwCC,EAAAA;AAAxC,CAAlB,EAAyE;AACtF,QAAMC,OAAO,GAAGN,SAAS,CAAC;AAAEK,IAAAA,WAAF;AAAeP,IAAAA;AAAf,GAAD,CAAzB;AAEA,sBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEQ,OAAO,CAACC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAED,OAAO,CAACE,WAAhC;AAA6C,IAAA,SAAS,EAAC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,eAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,cADV;AAEE,IAAA,EAAE,EAAC,cAFL;AAGE,IAAA,KAAK,EAAEN,KAHT;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,CAAC,GAAGJ,WAAW,CAACU,IAAhB,EAAsB,IAAIJ,WAAW,GAAG,EAAH,GAAQN,WAAW,CAACW,QAAnC,CAAtB,EAAoEC,GAApE,CAAwE,CAACC,OAAD,EAAUC,CAAV,kBAAgB,oBAAC,QAAD;AACtF,IAAA,KAAK,EAAED,OAAO,CAACV,KADuE;AAEtF,IAAA,GAAG,EAAEW,CAFiF;AAGtF,IAAA,QAAQ,EAAED,OAAO,CAACV,KAAR,KAAkB,WAAlB,IAAiCG,WAH2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKrFO,OAAO,CAACE,IAL6E,CAAxF,CAPJ,CAFF,CADF,EAqBIT,WAAW,iBACT,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEC,OAAO,CAACE,WAAhC;AAA6C,IAAA,SAAS,EAAC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,kBADV;AAEE,IAAA,EAAE,EAAC,kBAFL;AAGE,IAAA,KAAK,EAAEH,WAHT;AAIE,IAAA,QAAQ,EAAED,mBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAFF,CAtBN,CADF;AAuCD","sourcesContent":["import React from 'react';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Paper from '@material-ui/core/Paper';\n\nimport { isMobile } from 'utils';\nimport { mapSettings } from 'config';\n\nimport useStyles from './styles';\n\nexport default function Settings({ value, onChange, onUSADivisionChange, dividedInto }) {\n  const classes = useStyles({ dividedInto, isMobile });\n\n  return (\n    <Paper className={classes.root}>\n      <FormControl className={classes.formControl} component=\"fieldset\">\n        <InputLabel id=\"map-settings\">Highlighting (distribution) Criterion</InputLabel>\n        <Select\n          labelId=\"map-settings\"\n          id=\"map-settings\"\n          value={value}\n          onChange={onChange}\n        >\n          {\n            [...mapSettings.main, ...(dividedInto ? [] : mapSettings.optional)].map((setting, i) => <MenuItem\n              value={setting.value}\n              key={i}\n              disabled={setting.value === 'recovered' && dividedInto}\n            >\n              {setting.name}\n            </MenuItem>)\n          }\n        </Select>\n      </FormControl>\n      {\n        dividedInto && (\n          <FormControl className={classes.formControl} component=\"fieldset\">\n            <InputLabel id=\"usa-map-settings\">Divided into</InputLabel>\n            <Select\n              labelId=\"usa-map-settings\"\n              id=\"usa-map-settings\"\n              value={dividedInto}\n              onChange={onUSADivisionChange}\n            >\n              <MenuItem value=\"states\">States</MenuItem>\n              <MenuItem value=\"counties\">Counties</MenuItem>\n            </Select>\n          </FormControl>\n        )\n      }\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}