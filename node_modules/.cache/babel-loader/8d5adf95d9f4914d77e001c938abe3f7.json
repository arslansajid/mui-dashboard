{"ast":null,"code":"var _jsxFileName = \"/Users/arslansajid/Documents/Github/corona/mui-dashboard/src/sections/Menu/Component.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PersonIcon from '@material-ui/icons/Person';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Dashboard from '@material-ui/icons/Dashboard';\nimport History from '@material-ui/icons/History';\nimport Map from '@material-ui/icons/Map';\nimport BarChart from '@material-ui/icons/BarChart';\nimport Layers from '@material-ui/icons/Dashboard';\nimport { useLocation } from 'react-router-dom';\nimport Link from 'components/Link';\nimport { noop, isMobile } from 'utils';\nimport { menuItems, authorInfo } from 'config';\nimport useStyles from './styles';\nconst menuIcons = {\n  Dashboard,\n  History,\n  Map,\n  BarChart,\n  Layers\n};\nexport const MainList = ({\n  onMenuClose,\n  items\n}) => {\n  const location = useLocation();\n  return /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, items.map(item => {\n    return /*#__PURE__*/React.createElement(Link, {\n      key: item.path,\n      to: item.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      onClick: onMenuClose,\n      button: true,\n      selected: location.pathname === item.path || location.pathname === '/' && item.isDefault,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      className: \"_relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, React.createElement(menuIcons[item.icon])), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    })));\n  })));\n};\n\nfunction ContactsDialog({\n  handleDialogClose,\n  open\n}) {\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleDialogClose,\n    \"aria-labelledby\": \"contacts-dialog\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"contacts-dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, authorInfo.message), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto: ${authorInfo.email}`,\n    className: \"link-without-styles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: authorInfo.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport const OptionalList = ({\n  handleDialogOpen\n}) => {\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"at-the-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: handleDialogOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EmailIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default function Menu({\n  isOpen,\n  onClose,\n  onOpen\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  function handleDialogClose() {\n    setOpen(false);\n  }\n\n  function handleDialogOpen() {\n    setOpen(true);\n    onClose();\n  }\n\n  return /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    variant: isMobile ? 'temporary' : 'permanent',\n    disableBackdropTransition: false,\n    classes: {\n      paper: clsx(classes.drawerPaper, !isOpen && !isMobile && classes.drawerPaperClose)\n    },\n    open: isOpen,\n    onOpen: onOpen,\n    onClose: isMobile ? onClose : noop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbarIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onClose,\n    \"aria-label\": \"close drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MainList, {\n    items: menuItems.main,\n    onMenuClose: isMobile ? onClose : noop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(OptionalList, {\n    handleDialogOpen: handleDialogOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ContactsDialog, {\n    open: open,\n    handleDialogClose: handleDialogClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/arslansajid/Documents/Github/corona/mui-dashboard/src/sections/Menu/Component.js"],"names":["React","useState","clsx","SwipeableDrawer","Divider","List","ListItem","ListItemIcon","ListItemText","Avatar","ListItemAvatar","DialogTitle","Dialog","EmailIcon","PersonIcon","IconButton","ChevronLeftIcon","Dashboard","History","Map","BarChart","Layers","useLocation","Link","noop","isMobile","menuItems","authorInfo","useStyles","menuIcons","MainList","onMenuClose","items","location","map","item","path","pathname","isDefault","createElement","icon","title","ContactsDialog","handleDialogClose","open","message","email","OptionalList","handleDialogOpen","Menu","isOpen","onClose","onOpen","classes","setOpen","paper","drawerPaper","drawerPaperClose","toolbarIcon","main"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport clsx from 'clsx';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PersonIcon from '@material-ui/icons/Person';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport Dashboard from '@material-ui/icons/Dashboard';\nimport History from '@material-ui/icons/History';\nimport Map from '@material-ui/icons/Map';\nimport BarChart from '@material-ui/icons/BarChart';\nimport Layers from '@material-ui/icons/Dashboard';\n\nimport { useLocation } from 'react-router-dom';\n\nimport Link from 'components/Link';\nimport { noop, isMobile } from 'utils';\nimport { menuItems, authorInfo } from 'config';\n\nimport useStyles from './styles';\n\nconst menuIcons = { Dashboard, History, Map, BarChart, Layers };\n\nexport const MainList = ({ onMenuClose, items }) => {\n  const location = useLocation();\n\n  return <List>\n    <div>\n      {\n        items.map(item => {\n          return (\n            <Link key={item.path} to={item.path}>\n              <ListItem\n                onClick={onMenuClose}\n                button\n                selected={\n                  location.pathname === item.path ||\n                  (location.pathname === '/' && item.isDefault)\n                }\n              >\n                  <ListItemIcon className=\"_relative\">\n                    {React.createElement(menuIcons[item.icon])}\n                  </ListItemIcon>\n                  <ListItemText primary={item.title} />\n              </ListItem>\n            </Link>\n          );\n        })\n      }\n    </div>\n  </List>\n};\n\nfunction ContactsDialog({ handleDialogClose, open }) {\n  return (\n    <Dialog onClose={handleDialogClose} aria-labelledby=\"contacts-dialog\" open={open}>\n      <DialogTitle id=\"contacts-dialog\">{authorInfo.message}</DialogTitle>\n      <List>\n        <ListItem button>\n          <a href={`mailto: ${authorInfo.email}`} className=\"link-without-styles\">\n            <ListItemAvatar>\n              <Avatar>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={authorInfo.email} />\n          </a>\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nexport const OptionalList = ({ handleDialogOpen }) => {\n  return (\n    <List className=\"at-the-bottom\">\n      <div>\n        <ListItem button onClick={handleDialogOpen}>\n          <ListItemIcon>\n            <EmailIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Contacts\" />\n        </ListItem>\n      </div>\n    </List>\n  );\n};\n\nexport default function Menu({ isOpen, onClose, onOpen }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  function handleDialogClose() {\n    setOpen(false);\n  }\n\n  function handleDialogOpen() {\n    setOpen(true);\n    onClose();\n  }\n\n  return (\n    <SwipeableDrawer\n      variant={isMobile ? 'temporary' : 'permanent'}\n      disableBackdropTransition={false}\n      classes={{\n        paper: clsx(classes.drawerPaper, !isOpen && !isMobile && classes.drawerPaperClose),\n      }}\n      open={isOpen}\n      onOpen={(onOpen)}\n      onClose={isMobile ? (onClose) : noop}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton\n          onClick={onClose}\n          aria-label=\"close drawer\"\n        >\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <MainList items={menuItems.main} onMenuClose={isMobile ? onClose : noop} />\n      <Divider />\n      <OptionalList handleDialogOpen={handleDialogOpen} />\n      <ContactsDialog open={open} handleDialogClose={handleDialogClose} />\n    </SwipeableDrawer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}