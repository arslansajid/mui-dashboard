{"ast":null,"code":"var _jsxFileName = \"/Users/arslansajid/Documents/Github/corona/mui-dashboard/src/components/Charts/Line/Button/Component.js\";\nimport React, { useState, useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { logarithmTypes } from 'config';\nexport default function LogarithmicButton({\n  onChange,\n  type\n}) {\n  const [open, setOpen] = useState(false);\n  const anchorRef = useRef(null);\n  const [logarithmType, setLogarithmType] = useState('log');\n\n  const handleLogarithmicClick = () => {\n    onChange(logarithmType);\n  };\n\n  const handleLinearClick = () => {\n    onChange('linear');\n  };\n\n  const handleMenuItemClick = type => {\n    setLogarithmType(type);\n    onChange(type);\n    setOpen(false);\n  };\n\n  const handleTypesToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonGroup, {\n    variant: \"text\",\n    ref: anchorRef,\n    \"aria-label\": \"split button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleLinearClick,\n    disabled: type === 'linear',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Linear\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleLogarithmicClick,\n    disabled: type.includes('log'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Logarithmic\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: !type.includes('log'),\n    size: \"small\",\n    \"aria-controls\": open ? 'split-button-menu' : undefined,\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-label\": \"select merge strategy\",\n    \"aria-haspopup\": \"menu\",\n    onClick: handleTypesToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, ({\n    TransitionProps,\n    placement\n  }) => /*#__PURE__*/React.createElement(Grow, Object.assign({}, TransitionProps, {\n    style: {\n      transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuList, {\n    id: \"split-button-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, Object.entries(logarithmTypes).map(([type, name]) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: type,\n    selected: type === logarithmType,\n    onClick: _ => handleMenuItemClick(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, name))))))));\n}","map":{"version":3,"sources":["/Users/arslansajid/Documents/Github/corona/mui-dashboard/src/components/Charts/Line/Button/Component.js"],"names":["React","useState","useRef","Button","ButtonGroup","ArrowDropDownIcon","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","logarithmTypes","LogarithmicButton","onChange","type","open","setOpen","anchorRef","logarithmType","setLogarithmType","handleLogarithmicClick","handleLinearClick","handleMenuItemClick","handleTypesToggle","prevOpen","handleClose","event","current","contains","target","includes","undefined","TransitionProps","placement","transformOrigin","Object","entries","map","name","_"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\nimport { logarithmTypes } from 'config';\n\nexport default function LogarithmicButton({ onChange, type }) {\n  const [open, setOpen] = useState(false);\n  const anchorRef = useRef(null);\n  const [logarithmType, setLogarithmType] = useState('log');\n\n  const handleLogarithmicClick = () => {\n    onChange(logarithmType);\n  };\n\n  const handleLinearClick = () => {\n    onChange('linear');\n  };\n\n  const handleMenuItemClick = type => {\n    setLogarithmType(type);\n    onChange(type);\n    setOpen(false);\n  };\n\n  const handleTypesToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup variant=\"text\" ref={anchorRef} aria-label=\"split button\">\n        <Button onClick={handleLinearClick} disabled={type === 'linear'}>Linear</Button>\n        <Button onClick={handleLogarithmicClick} disabled={type.includes('log')}>Logarithmic</Button>\n        <Button\n          disabled={!type.includes('log')}\n          size=\"small\"\n          aria-controls={open ? 'split-button-menu' : undefined}\n          aria-expanded={open ? 'true' : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleTypesToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {Object.entries(logarithmTypes).map(([type, name]) => (\n                    <MenuItem\n                      key={type}\n                      selected={type === logarithmType}\n                      onClick={_ => handleMenuItemClick(type)}\n                    >\n                      {name}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}