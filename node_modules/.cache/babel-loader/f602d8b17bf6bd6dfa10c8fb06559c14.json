{"ast":null,"code":"export const doNotProxy = Symbol('doNotProxy');\n\nfunction isObject(value) {\n  return typeof value === 'object' && !Array.isArray(value) && value !== null;\n}\n\nlet hasWarnedConstructor = false;\nlet currentEffectId = 0;\nconst ORIGIN_TARGET = Symbol('ORIGIN_TARGET');\nexport function proxifyEffects(effects, cb, path = '') {\n  if (!isObject(effects) && !(typeof effects === 'function')) {\n    return effects;\n  }\n\n  return new Proxy(effects, {\n    apply(target, thisArg, agumentsList) {\n      const effectId = currentEffectId++;\n      const name = path.split('.');\n      const method = name.pop();\n      return cb({\n        func: target.bind(thisArg[ORIGIN_TARGET]),\n        effectId,\n        name: name.join('.'),\n        method,\n        args: agumentsList\n      });\n    },\n\n    construct(Target, args) {\n      if (!hasWarnedConstructor) {\n        console.warn(`EFFECTS - It is highly recommended to create a custom effect, exposing a method that deals with the instantiation of \"${path}\". It improves readability and debugability of your app`);\n        hasWarnedConstructor = true;\n      }\n\n      return new Target(...args);\n    },\n\n    get(target, prop) {\n      if (prop === ORIGIN_TARGET) {\n        return target;\n      }\n\n      return proxifyEffects(target[prop], cb, path ? path + '.' + prop.toString() : prop.toString());\n    }\n\n  });\n}","map":{"version":3,"sources":["../src/proxyfyEffects.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,UAAU,GAAG,MAAM,CAAC,YAAD,CAAzB;;AAEP,SAAS,QAAT,CAAkB,KAAlB,EAAuB;AACrB,SAAO,OAAO,KAAP,KAAiB,QAAjB,IAA6B,CAAC,KAAK,CAAC,OAAN,CAAc,KAAd,CAA9B,IAAsD,KAAK,KAAK,IAAvE;AACD;;AAED,IAAI,oBAAoB,GAAG,KAA3B;AACA,IAAI,eAAe,GAAG,CAAtB;AACA,MAAM,aAAa,GAAG,MAAM,CAAC,eAAD,CAA5B;AACA,OAAM,SAAU,cAAV,CACJ,OADI,EAEJ,EAFI,EAGJ,IAAA,GAAe,EAHX,EAGa;AAEjB,MAAI,CAAC,QAAQ,CAAC,OAAD,CAAT,IAAsB,EAAE,OAAO,OAAP,KAAmB,UAArB,CAA1B,EAA4D;AAC1D,WAAO,OAAP;AACD;;AAED,SAAO,IAAI,KAAJ,CAAU,OAAV,EAA0B;AAC/B,IAAA,KAAK,CAAC,MAAD,EAAS,OAAT,EAAkB,YAAlB,EAA8B;AACjC,YAAM,QAAQ,GAAG,eAAe,EAAhC;AACA,YAAM,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAb;AACA,YAAM,MAAM,GAAG,IAAI,CAAC,GAAL,EAAf;AACA,aAAO,EAAE,CAAC;AACR,QAAA,IAAI,EAAE,MAAM,CAAC,IAAP,CAAY,OAAO,CAAC,aAAD,CAAnB,CADE;AAER,QAAA,QAFQ;AAGR,QAAA,IAAI,EAAE,IAAI,CAAC,IAAL,CAAU,GAAV,CAHE;AAIR,QAAA,MAJQ;AAKR,QAAA,IAAI,EAAE;AALE,OAAD,CAAT;AAOD,KAZ8B;;AAa/B,IAAA,SAAS,CAAC,MAAD,EAAS,IAAT,EAAa;AACpB,UAAI,CAAC,oBAAL,EAA2B;AACzB,QAAA,OAAO,CAAC,IAAR,CACE,yHAAyH,IAAI,yDAD/H;AAGA,QAAA,oBAAoB,GAAG,IAAvB;AACD;;AAED,aAAO,IAAI,MAAJ,CAAW,GAAG,IAAd,CAAP;AACD,KAtB8B;;AAuB/B,IAAA,GAAG,CAAC,MAAD,EAAS,IAAT,EAAa;AACd,UAAI,IAAI,KAAK,aAAb,EAA4B;AAC1B,eAAO,MAAP;AACD;;AAED,aAAO,cAAc,CAAC,MAAM,CAAC,IAAD,CAAP,EAAe,EAAf,EAAmB,IAAI,GAAG,IAAI,GAAG,GAAP,GAAa,IAAI,CAAC,QAAL,EAAhB,GAAkC,IAAI,CAAC,QAAL,EAAzD,CAArB;AACD;;AA7B8B,GAA1B,CAAP;AA+BD","sourcesContent":["export const doNotProxy = Symbol('doNotProxy')\n\nfunction isObject(value) {\n  return typeof value === 'object' && !Array.isArray(value) && value !== null\n}\n\nlet hasWarnedConstructor = false\nlet currentEffectId = 0\nconst ORIGIN_TARGET = Symbol('ORIGIN_TARGET')\nexport function proxifyEffects<Effects>(\n  effects: Effects,\n  cb: (effect) => void,\n  path: string = ''\n): Effects {\n  if (!isObject(effects) && !(typeof effects === 'function')) {\n    return effects\n  }\n  \n  return new Proxy(effects as any, {\n    apply(target, thisArg, agumentsList) {\n      const effectId = currentEffectId++\n      const name = path.split('.')\n      const method = name.pop()\n      return cb({\n        func: target.bind(thisArg[ORIGIN_TARGET]),\n        effectId,\n        name: name.join('.'),\n        method,\n        args: agumentsList,\n      })\n    },\n    construct(Target, args) {\n      if (!hasWarnedConstructor) {\n        console.warn(\n          `EFFECTS - It is highly recommended to create a custom effect, exposing a method that deals with the instantiation of \"${path}\". It improves readability and debugability of your app`\n        )\n        hasWarnedConstructor = true\n      }\n\n      return new Target(...args)\n    },\n    get(target, prop) {\n      if (prop === ORIGIN_TARGET) {\n        return target\n      }\n      \n      return proxifyEffects(target[prop], cb, path ? path + '.' + prop.toString() : prop.toString())\n    }\n  })\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}