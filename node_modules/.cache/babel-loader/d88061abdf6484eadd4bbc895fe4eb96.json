{"ast":null,"code":"var _jsxFileName = \"/Users/arslansajid/Documents/Github/corona/mui-dashboard/src/sections/AppBar/Component.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Switch from '@material-ui/core/Switch';\nimport { useStore } from 'store';\nimport { isMobile } from 'utils';\nimport { appTitle } from 'config';\nimport useStyles from './styles';\nconst themeToggleProps = {\n  'aria-label': 'toggle theme'\n};\n\nconst AppBar_ = ({\n  isMenuOpen,\n  onMenuOpen\n}) => {\n  const classes = useStyles();\n  const {\n    state: {\n      themeMode\n    },\n    actions: {\n      setThemeMode\n    }\n  } = useStore();\n\n  function handleChangeTheme(ev) {\n    setThemeMode(ev.target.checked ? 'dark' : 'light');\n  }\n\n  return /*#__PURE__*/React.createElement(AppBar, {\n    position: \"absolute\",\n    className: clsx(classes.appBar, isMenuOpen && !isMobile && classes.appBarShift),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: onMenuOpen,\n    className: clsx(classes.menuButton, isMenuOpen && !isMobile && classes.menuButtonHidden),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h6\",\n    color: \"inherit\",\n    noWrap: true,\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, appTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    noWrap: true,\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"light\"), /*#__PURE__*/React.createElement(Switch, {\n    \"aria-label\": \"toggle theme\",\n    inputProps: themeToggleProps,\n    color: \"default\",\n    checked: themeMode === 'dark',\n    onChange: handleChangeTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    noWrap: true,\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"dark\"))));\n};\n\nexport default AppBar_;","map":{"version":3,"sources":["/Users/arslansajid/Documents/Github/corona/mui-dashboard/src/sections/AppBar/Component.js"],"names":["React","clsx","Toolbar","AppBar","IconButton","Typography","MenuIcon","Switch","useStore","isMobile","appTitle","useStyles","themeToggleProps","AppBar_","isMenuOpen","onMenuOpen","classes","state","themeMode","actions","setThemeMode","handleChangeTheme","ev","target","checked","appBar","appBarShift","toolbar","menuButton","menuButtonHidden","title","theme"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport clsx from 'clsx';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Switch from '@material-ui/core/Switch';\n\nimport { useStore } from 'store';\nimport { isMobile } from 'utils';\nimport { appTitle } from 'config';\n\nimport useStyles from './styles';\n\nconst themeToggleProps = { 'aria-label': 'toggle theme' };\n\nconst AppBar_ = ({ isMenuOpen, onMenuOpen }) => {\n  const classes = useStyles();\n  const { state: { themeMode }, actions: { setThemeMode } } = useStore();\n\n  function handleChangeTheme(ev) {\n    setThemeMode(ev.target.checked ? 'dark' : 'light');\n  }\n\n  return (\n    <AppBar position=\"absolute\" className={clsx(classes.appBar, isMenuOpen && !isMobile && classes.appBarShift)}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={onMenuOpen}\n          className={clsx(classes.menuButton, isMenuOpen && !isMobile && classes.menuButtonHidden)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          {appTitle}\n        </Typography>\n        <div className={classes.theme}>\n          <Typography component=\"span\" noWrap color=\"inherit\">\n            light\n          </Typography>\n          <Switch\n            aria-label=\"toggle theme\"\n            inputProps={themeToggleProps}\n            color=\"default\"\n            checked={themeMode === 'dark'}\n            onChange={handleChangeTheme}\n          />\n          <Typography component=\"span\" noWrap color=\"inherit\">\n            dark\n          </Typography>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default AppBar_;\n"]},"metadata":{},"sourceType":"module"}