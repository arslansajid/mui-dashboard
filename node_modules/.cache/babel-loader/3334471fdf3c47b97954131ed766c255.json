{"ast":null,"code":"var _jsxFileName = \"/Users/arslansajid/Documents/Github/corona/covid19-client/src/pages/Historical/Component.js\";\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Player from 'sections/Historical/Player';\nimport Settings from 'sections/Historical/Settings';\nimport Content from 'sections/Historical/Content';\nimport dayjs from 'dayjs';\nimport { historical } from 'config';\nimport useStyles from './styles';\nexport default function Historical() {\n  const classes = useStyles();\n  const [mode, setMode] = useState('map');\n  const [selectedCountries, setSelectedCountries] = useState(historical.countries.default);\n  const [from, setFrom] = useState(historical.dates.defaults.from);\n  const [to, setTo] = useState(historical.dates.defaults.to);\n  const [criterion, setCriterion] = useState('confirmed');\n  const [playerStatus, setPlayerStatus] = useState('paused');\n  const [progress, setProgress] = useState(100);\n  useEffect(_ => {\n    let timerId;\n\n    if (playerStatus === 'playing') {\n      if (progress < 100) {\n        timerId = setInterval(_ => {\n          setProgress(progress => progress + 1);\n        }, 200);\n      } else {\n        clearInterval(timerId);\n        setPlayerStatus('paused');\n      }\n    }\n\n    return _ => timerId && clearInterval(timerId);\n  }, [playerStatus, progress]);\n  const handleModeChange = useCallback(ev => {\n    setMode(ev.target.checked ? 'chart' : 'map');\n  }, [setMode]);\n  const handleCountriesChange = useCallback((ev, value) => {\n    setSelectedCountries(value);\n  }, [setSelectedCountries]);\n  const handleFromChange = useCallback(date => {\n    setFrom(date);\n  }, [setFrom]);\n  const handleToChange = useCallback(date => {\n    setTo(date);\n  }, [setTo]);\n  const handleCriterionChange = useCallback(ev => {\n    setCriterion(ev.target.value);\n  }, [setCriterion]);\n  const togglePlayer = useCallback(_ => {\n    setPlayerStatus(status => status === 'paused' ? 'playing' : 'paused');\n  }, [setPlayerStatus]);\n  const handleDrag = useCallback((ev, data) => {\n    setPlayerStatus('paused');\n    const value = Math.round(data.x / (data.node.offsetWidth - 20) * 100);\n\n    if (value < 0) {\n      setProgress(0);\n    } else if (value > 100) {\n      setProgress(100);\n    } else {\n      setProgress(value);\n    }\n  }, [setProgress, setPlayerStatus]);\n  const handleReset = useCallback(_ => {\n    setProgress(0);\n    setPlayerStatus('paused');\n  }, [setProgress, setPlayerStatus]);\n  const currentDate = useMemo(_ => {\n    const _from = dayjs(from);\n\n    const _to = dayjs(to);\n\n    const diff = _to.diff(_from, 'days');\n\n    const current = diff * progress / 100;\n    return _from.add(Math.round(current), 'days').format(historical.dates.format);\n  }, [from, to, progress]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Settings, {\n    mode: mode,\n    from: from,\n    to: to,\n    criterion: criterion,\n    selectedCountries: selectedCountries,\n    onCountriesChange: handleCountriesChange,\n    onFromChange: handleFromChange,\n    onToChange: handleToChange,\n    onModeChange: handleModeChange,\n    onCriterionChange: handleCriterionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    mode: mode,\n    from: from,\n    to: to,\n    criterion: criterion,\n    selectedCountries: selectedCountries,\n    currentDate: currentDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Player, {\n    status: playerStatus,\n    value: progress,\n    onChange: togglePlayer,\n    onDrag: handleDrag,\n    onReset: handleReset,\n    date: currentDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/arslansajid/Documents/Github/corona/covid19-client/src/pages/Historical/Component.js"],"names":["React","useState","useEffect","useCallback","useMemo","Paper","Player","Settings","Content","dayjs","historical","useStyles","Historical","classes","mode","setMode","selectedCountries","setSelectedCountries","countries","default","from","setFrom","dates","defaults","to","setTo","criterion","setCriterion","playerStatus","setPlayerStatus","progress","setProgress","_","timerId","setInterval","clearInterval","handleModeChange","ev","target","checked","handleCountriesChange","value","handleFromChange","date","handleToChange","handleCriterionChange","togglePlayer","status","handleDrag","data","Math","round","x","node","offsetWidth","handleReset","currentDate","_from","_to","diff","current","add","format","root"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport Player from 'sections/Historical/Player';\nimport Settings from 'sections/Historical/Settings';\nimport Content from 'sections/Historical/Content';\n\nimport dayjs from 'dayjs';\n\nimport { historical } from 'config';\n\nimport useStyles from './styles';\n\nexport default function Historical() {\n  const classes = useStyles();\n  const [mode, setMode] = useState('map');\n  const [selectedCountries, setSelectedCountries] = useState(historical.countries.default);\n  const [from, setFrom] = useState(historical.dates.defaults.from);\n  const [to, setTo] = useState(historical.dates.defaults.to);\n  const [criterion, setCriterion] = useState('confirmed');\n  const [playerStatus, setPlayerStatus] = useState('paused');\n  const [progress, setProgress] = useState(100);\n\n  useEffect(_ => {\n    let timerId;\n\n    if (playerStatus === 'playing') {\n      if (progress < 100) {\n        timerId = setInterval(_ => {\n          setProgress(progress => progress + 1);\n        }, 200);\n      } else {\n        clearInterval(timerId);\n        setPlayerStatus('paused');\n      }\n    }\n\n    return _ => timerId && clearInterval(timerId);\n  }, [playerStatus, progress]);\n\n  const handleModeChange = useCallback(ev => {\n    setMode(ev.target.checked ? 'chart' : 'map');\n  }, [setMode]);\n\n  const handleCountriesChange = useCallback((ev, value) => {\n    setSelectedCountries(value);\n  }, [setSelectedCountries]);\n\n  const handleFromChange = useCallback(date => {\n    setFrom(date);\n  }, [setFrom]);\n\n  const handleToChange = useCallback(date => {\n    setTo(date);\n  }, [setTo]);\n\n  const handleCriterionChange = useCallback(ev => {\n    setCriterion(ev.target.value);\n  }, [setCriterion]);\n\n  const togglePlayer = useCallback(_ => {\n    setPlayerStatus(status => status === 'paused' ? 'playing' : 'paused');\n  }, [setPlayerStatus]);\n\n  const handleDrag = useCallback((ev, data) => {\n    setPlayerStatus('paused');\n    const value = Math.round((data.x / (data.node.offsetWidth - 20) * 100));\n\n    if (value < 0) {\n      setProgress(0);\n    } else if (value > 100) {\n      setProgress(100);\n    } else {\n      setProgress(value);\n    }\n  }, [setProgress, setPlayerStatus]);\n\n  const handleReset = useCallback(_ => {\n    setProgress(0);\n    setPlayerStatus('paused');\n  }, [setProgress, setPlayerStatus]);\n\n  const currentDate = useMemo(_ => {\n    const _from = dayjs(from);\n    const _to = dayjs(to);\n\n    const diff = _to.diff(_from, 'days');\n\n    const current = diff * progress / 100;\n\n    return _from\n      .add(Math.round(current), 'days')\n      .format(historical.dates.format);\n  }, [from, to, progress]);\n\n  return (\n    <Paper className={classes.root}>\n      <Settings\n        mode={mode}\n        from={from}\n        to={to}\n        criterion={criterion}\n        selectedCountries={selectedCountries}\n        onCountriesChange={handleCountriesChange}\n        onFromChange={handleFromChange}\n        onToChange={handleToChange}\n        onModeChange={handleModeChange}\n        onCriterionChange={handleCriterionChange}\n      />\n      <Content\n        mode={mode}\n        from={from}\n        to={to}\n        criterion={criterion}\n        selectedCountries={selectedCountries}\n        currentDate={currentDate}\n      />\n      <Player\n        status={playerStatus}\n        value={progress}\n        onChange={togglePlayer}\n        onDrag={handleDrag}\n        onReset={handleReset}\n        date={currentDate}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}