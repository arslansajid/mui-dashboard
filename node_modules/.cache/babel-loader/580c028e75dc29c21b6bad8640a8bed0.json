{"ast":null,"code":"var _jsxFileName = \"/Users/arslansajid/Documents/Github/corona/covid19-client/src/components/Charts/Line/Component.js\";\nimport React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport { isMobile } from 'utils';\nimport { chartDefaults } from 'config';\n\nfunction getTickValues(data) {\n  const _data = data[0].data;\n  return _data.filter((_, i) => !(i % (isMobile ? 8 : 4))).map(item => new Date(item.x));\n}\n\nconst LineChart = ({\n  data,\n  type,\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(ResponsiveLine, Object.assign({\n    data: data,\n    xScale: {\n      type: 'time',\n      format: '%Y-%m-%d',\n      precision: 'day'\n    },\n    xFormat: \"time:%Y-%m-%d\",\n    axisBottom: {\n      format: '%b %d',\n      tickValues: data.length && getTickValues(data),\n      tickRotation: -45,\n      tickPadding: 10\n    }\n  }, chartDefaults.line, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/arslansajid/Documents/Github/corona/covid19-client/src/components/Charts/Line/Component.js"],"names":["React","ResponsiveLine","isMobile","chartDefaults","getTickValues","data","_data","filter","_","i","map","item","Date","x","LineChart","type","props","format","precision","tickValues","length","tickRotation","tickPadding","line"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,YAA/B;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,QAA9B;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,QAAMC,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAtB;AACA,SAAOC,KAAK,CAACC,MAAN,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU,EAAEA,CAAC,IAAIP,QAAQ,GAAG,CAAH,GAAO,CAAnB,CAAH,CAAvB,EAAkDQ,GAAlD,CAAsDC,IAAI,IAAI,IAAIC,IAAJ,CAASD,IAAI,CAACE,CAAd,CAA9D,CAAP;AACD;;AAED,MAAMC,SAAS,GAAG,CAAC;AAAET,EAAAA,IAAF;AAAQU,EAAAA,IAAR;AAAc,KAAGC;AAAjB,CAAD,KAA8B;AAC9C,sBACE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAEX,IADR;AAEE,IAAA,MAAM,EAAE;AACNU,MAAAA,IAAI,EAAE,MADA;AAENE,MAAAA,MAAM,EAAE,UAFF;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAFV;AAOE,IAAA,OAAO,EAAC,eAPV;AAQE,IAAA,UAAU,EAAE;AACVD,MAAAA,MAAM,EAAE,OADE;AAEVE,MAAAA,UAAU,EAAEd,IAAI,CAACe,MAAL,IAAehB,aAAa,CAACC,IAAD,CAF9B;AAGVgB,MAAAA,YAAY,EAAE,CAAC,EAHL;AAIVC,MAAAA,WAAW,EAAE;AAJH;AARd,KAcMnB,aAAa,CAACoB,IAdpB,EAeMP,KAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAmBD,CApBD;;AAsBA,eAAeF,SAAf","sourcesContent":["import React from 'react';\n\nimport { ResponsiveLine } from '@nivo/line'\n\nimport { isMobile } from 'utils';\nimport { chartDefaults } from 'config';\n\nfunction getTickValues(data) {\n  const _data = data[0].data;\n  return _data.filter((_, i) => !(i % (isMobile ? 8 : 4))).map(item => new Date(item.x));\n}\n\nconst LineChart = ({ data, type, ...props }) => {\n  return (\n    <ResponsiveLine\n      data={data}\n      xScale={{\n        type: 'time',\n        format: '%Y-%m-%d',\n        precision: 'day',\n      }}\n      xFormat=\"time:%Y-%m-%d\"\n      axisBottom={{\n        format: '%b %d',\n        tickValues: data.length && getTickValues(data),\n        tickRotation: -45,\n        tickPadding: 10,\n      }}\n      {...chartDefaults.line}\n      {...props}\n    />\n  );\n};\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}