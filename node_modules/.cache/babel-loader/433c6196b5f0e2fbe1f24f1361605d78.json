{"ast":null,"code":"var EventEmitter =\n/** @class */\nfunction () {\n  function EventEmitter() {\n    this.events = new Map();\n  }\n\n  EventEmitter.prototype.emit = function (event, msg) {\n    var listeners = this.events.get(event) || [];\n\n    for (var i = listeners.length - 1; i >= 0; i--) {\n      var listener = listeners[i];\n      listener.cb(msg);\n\n      if (listener.once) {\n        listeners.splice(i, 1);\n      }\n    }\n  };\n\n  EventEmitter.prototype.emitAsync = function (event, msg) {\n    var listeners = this.events.get(event) || [];\n    setTimeout(function () {\n      for (var i = listeners.length - 1; i >= 0; i--) {\n        var listener = listeners[i];\n        listener.cb(msg);\n\n        if (listener.once) {\n          listeners.splice(i, 1);\n        }\n      }\n    });\n  };\n\n  EventEmitter.prototype.on = function (event, cb) {\n    this.addListener(event, cb, false);\n  };\n\n  EventEmitter.prototype.once = function (event, cb) {\n    this.addListener(event, cb, true);\n  };\n\n  EventEmitter.prototype.addListener = function (event, cb, once) {\n    var listeners = this.events.get(event) || [];\n    listeners.push({\n      once: once,\n      cb: cb\n    });\n    this.events.set(event, listeners);\n  };\n\n  return EventEmitter;\n}();\n\nexport { EventEmitter };","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"AAKA,IAAA,YAAA;AAAA;AAAA,YAAA;AAAA,WAAA,YAAA,GAAA;AACU,SAAA,MAAA,GAAS,IAAI,GAAJ,EAAT;AAkDT;;AAhDC,EAAA,YAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAwB,KAAxB,EAAkC,GAAlC,EAA2C;AACzC,QAAM,SAAS,GAAG,KAAK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,KAA0B,EAA5C;;AAEA,SAAK,IAAI,CAAC,GAAG,SAAS,CAAC,MAAV,GAAmB,CAAhC,EAAmC,CAAC,IAAI,CAAxC,EAA2C,CAAC,EAA5C,EAAgD;AAC9C,UAAM,QAAQ,GAAG,SAAS,CAAC,CAAD,CAA1B;AAEA,MAAA,QAAQ,CAAC,EAAT,CAAY,GAAZ;;AAEA,UAAI,QAAQ,CAAC,IAAb,EAAmB;AACjB,QAAA,SAAS,CAAC,MAAV,CAAiB,CAAjB,EAAoB,CAApB;AACD;AACF;AACF,GAZD;;AAcA,EAAA,YAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAA6B,KAA7B,EAAuC,GAAvC,EAAgD;AAC9C,QAAM,SAAS,GAAG,KAAK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,KAA0B,EAA5C;AAEA,IAAA,UAAU,CAAC,YAAA;AACT,WAAK,IAAI,CAAC,GAAG,SAAS,CAAC,MAAV,GAAmB,CAAhC,EAAmC,CAAC,IAAI,CAAxC,EAA2C,CAAC,EAA5C,EAAgD;AAC9C,YAAM,QAAQ,GAAG,SAAS,CAAC,CAAD,CAA1B;AAEA,QAAA,QAAQ,CAAC,EAAT,CAAY,GAAZ;;AAEA,YAAI,QAAQ,CAAC,IAAb,EAAmB;AACjB,UAAA,SAAS,CAAC,MAAV,CAAiB,CAAjB,EAAoB,CAApB;AACD;AACF;AACF,KAVS,CAAV;AAWD,GAdD;;AAgBA,EAAA,YAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAsB,KAAtB,EAAgC,EAAhC,EAAuD;AACrD,SAAK,WAAL,CAAiB,KAAjB,EAAwB,EAAxB,EAA4B,KAA5B;AACD,GAFD;;AAIA,EAAA,YAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAwB,KAAxB,EAAkC,EAAlC,EAAyD;AACvD,SAAK,WAAL,CAAiB,KAAjB,EAAwB,EAAxB,EAA4B,IAA5B;AACD,GAFD;;AAIQ,EAAA,YAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,KAApB,EAAoC,EAApC,EAAsD,IAAtD,EAAmE;AACjE,QAAM,SAAS,GAAG,KAAK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,KAA0B,EAA5C;AAEA,IAAA,SAAS,CAAC,IAAV,CAAe;AACb,MAAA,IAAI,EAAA,IADS;AAEb,MAAA,EAAE,EAAA;AAFW,KAAf;AAKA,SAAK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,EAAuB,SAAvB;AACD,GATO;;AAUV,SAAA,YAAA;AAAC,CAnDD,EAAA","sourcesContent":["export type Listener = {\n  once: boolean\n  cb: ({}) => void\n}\n\nexport class EventEmitter<T> {\n  private events = new Map<keyof T, Listener[]>()\n\n  emit<K extends keyof T>(event: K, msg: T[K]) {\n    const listeners = this.events.get(event) || []\n\n    for (let i = listeners.length - 1; i >= 0; i--) {\n      const listener = listeners[i]\n\n      listener.cb(msg)\n\n      if (listener.once) {\n        listeners.splice(i, 1)\n      }\n    }\n  }\n\n  emitAsync<K extends keyof T>(event: K, msg: T[K]) {\n    const listeners = this.events.get(event) || []\n\n    setTimeout(() => {\n      for (let i = listeners.length - 1; i >= 0; i--) {\n        const listener = listeners[i]\n\n        listener.cb(msg)\n\n        if (listener.once) {\n          listeners.splice(i, 1)\n        }\n      }\n    })\n  }\n\n  on<K extends keyof T>(event: K, cb: (msg: T[K]) => void) {\n    this.addListener(event, cb, false)\n  }\n\n  once<K extends keyof T>(event: K, cb: (msg: T[K]) => void) {\n    this.addListener(event, cb, true)\n  }\n\n  private addListener(event: keyof T, cb: ({}) => void, once: boolean) {\n    const listeners = this.events.get(event) || []\n\n    listeners.push({\n      once,\n      cb,\n    })\n\n    this.events.set(event, listeners)\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}