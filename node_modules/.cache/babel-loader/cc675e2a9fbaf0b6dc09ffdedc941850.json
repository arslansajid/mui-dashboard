{"ast":null,"code":"import { useMemo } from 'react';\nimport dayjs from 'dayjs';\nimport { useAPI } from './';\nimport { historical } from 'config';\nimport { generateDataRange } from 'utils';\nconst format = historical.dates.format;\nlet historicalData = generateDataRange(historical.dates.min, dayjs(), format, false);\n\nfunction getAPIParams(from, to) {\n  const dates = generateDataRange(dayjs(from, format), dayjs(to, format), format, true);\n  const [_from, _to, shouldUpdate] = shouldWeMakeACall(dates, historicalData, from, to);\n  return [getUrlForHistorical(_from, _to), !shouldUpdate];\n}\n\nfunction getUrlForHistorical(from, to) {\n  return `/historical?from=${from}&to=${to}`;\n}\n\nfunction shouldWeMakeACall(dates, data, from, to) {\n  /* eslint-disable */\n  const _from = dates.reduce((acc, date) => (!data[date] && !acc && (acc = date), acc), null);\n\n  const _to = dates.reverse().reduce((acc, date) => (!data[date] && !acc && (acc = date), acc), null);\n\n  return _from && _to ? [_from, _to, true] : [from, to, false];\n}\n\nexport default function useHistorical(from, to) {\n  const [data, isLoading] = useAPI(...getAPIParams(from, to));\n\n  if (data) {\n    historicalData = { ...historicalData,\n      ...data\n    };\n  }\n\n  const _data = useMemo(_ => {\n    const dates = generateDataRange(dayjs(from, format), dayjs(to, format), format, true);\n    return dates.reduce((acc, date) => {\n      acc[date] = historicalData[date];\n      return acc;\n    }, {});\n  }, [from, to, data]);\n\n  return [_data, isLoading];\n}","map":{"version":3,"sources":["/Users/arslansajid/Documents/Github/corona/mui-dashboard/src/api/useHistorical.js"],"names":["useMemo","dayjs","useAPI","historical","generateDataRange","format","dates","historicalData","min","getAPIParams","from","to","_from","_to","shouldUpdate","shouldWeMakeACall","getUrlForHistorical","data","reduce","acc","date","reverse","useHistorical","isLoading","_data","_"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\n\nimport dayjs from 'dayjs';\nimport { useAPI } from './';\n\nimport { historical } from 'config';\nimport { generateDataRange } from 'utils';\n\nconst format = historical.dates.format;\nlet historicalData = generateDataRange(historical.dates.min, dayjs(), format, false);\n\nfunction getAPIParams(from, to) {\n  const dates = generateDataRange(dayjs(from, format), dayjs(to, format), format, true);\n\n  const [_from, _to, shouldUpdate] = shouldWeMakeACall(dates, historicalData, from, to);\n\n  return [getUrlForHistorical(_from, _to), !shouldUpdate];\n}\n\nfunction getUrlForHistorical(from, to) {\n  return `/historical?from=${from}&to=${to}`;\n}\n\nfunction shouldWeMakeACall(dates, data, from, to) {\n   /* eslint-disable */ \n  const _from = dates.reduce((acc, date) => ((!data[date] && !acc && (acc = date)), acc), null);\n  const _to = dates.reverse().reduce((acc, date) => ((!data[date] && !acc && (acc = date)), acc), null);\n\n  return _from && _to\n    ? [_from, _to, true]\n    : [from, to, false];\n}\n\nexport default function useHistorical(from, to) {\n  const [data, isLoading] = useAPI(...getAPIParams(from, to));\n\n  if (data) {\n    historicalData = { ...historicalData, ...data };\n  }\n\n  const _data = useMemo(_ => {\n    const dates = generateDataRange(dayjs(from, format), dayjs(to, format), format, true);\n\n    return dates.reduce((acc, date) => {\n      acc[date] = historicalData[date];\n\n      return acc;\n    }, {});\n  }, [from, to, data]);\n\n  return [_data, isLoading];\n}\n"]},"metadata":{},"sourceType":"module"}